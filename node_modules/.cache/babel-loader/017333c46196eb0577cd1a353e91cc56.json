{"remainingRequest":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/babel-loader/lib/index.js!/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/admin1/Desktop/ledger-cosmos-js (copy)/vue_example/components/LedgerExample.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/vue_example/components/LedgerExample.vue","mtime":1573107892715},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/.babelrc","mtime":1573041144236},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LedgerExample.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cosmosLedger\">\n    <input id=\"webusb\" v-model=\"transportChoice\" type=\"radio\" value=\"WebUSB\" />\n    <label for=\"webusb\">WebUSB</label>\n    <input id=\"u2f\" v-model=\"transportChoice\" type=\"radio\" value=\"U2F\" />\n    <label for=\"u2f\">U2F</label>\n    <br />\n    <!--\n        Commands\n    -->\n    \n    <button @click=\"showAddress\">\n      Show Address\n    </button>\n\n  \n    <!--\n        Commands\n    -->\n    <ul id=\"ledger-status\">\n      <li v-for=\"item in ledgerStatus\" :key=\"item.index\">\n        {{ item.msg }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\nimport CosmosApp from \"../../src\";\n\nexport default {\n  name: \"CosmosLedger\",\n  props: {},\n  data() {\n    return {\n      deviceLog: [],\n      transportChoice: \"U2F\",\n    };\n  },\n  computed: {\n    ledgerStatus() {\n      return this.deviceLog;\n    },\n  },\n  methods: {\n    log(msg) {\n      this.deviceLog.push({\n        index: this.deviceLog.length,\n        msg,\n      });\n    },\n    async getTransport() {\n      let transport = null;\n\n      this.log(`Trying to connect via ${this.transportChoice}...`);\n      if (this.transportChoice === \"WebUSB\") {\n        try {\n          transport = await TransportWebUSB.create();\n        } catch (e) {\n          this.log(e);\n        }\n      }\n\n      if (this.transportChoice === \"U2F\") {\n        try {\n          transport = await TransportU2F.create(10000);\n        } catch (e) {\n          this.log(e);\n        }\n      }\n\n      return transport;\n    },\n    async getVersion() {\n      this.deviceLog = [];\n\n      // Given a transport (U2F/HIF/WebUSB) it is possible instantiate the app\n      const transport = await this.getTransport();\n      const app = new CosmosApp(transport);\n\n      // now it is possible to access all commands in the app\n      const response = await app.getVersion();\n      if (response.return_code !== 0x9000) {\n        this.log(`Error [${response.return_code}] ${response.error_message}`);\n        return;\n      }\n\n      this.log(\"Response received!\");\n      this.log(`App Version ${response.major}.${response.minor}.${response.patch}`);\n      this.log(`Device Locked: ${response.device_locked}`);\n      this.log(`Test mode: ${response.test_mode}`);\n      this.log(\"Full response:\");\n      this.log(response);\n    },\n    async showAddress() {\n      this.deviceLog = [];\n\n      // Given a transport (U2F/HIF/WebUSB) it is possible instantiate the app\n      const transport = await this.getTransport();\n      const app = new CosmosApp(transport);\n\n      // now it is possible to access all commands in the app\n      this.log(\"Please click in the device\");\n      const path = [44, 118, 5, 0, 3];\n      const response = await app.getAddressAndPubKey(path, \"cosmos\");\n      if (response.return_code !== 0x9000) {\n        this.log(`Error [${response.return_code}] ${response.error_message}`);\n        return;\n      }\n\n      this.log(\"Response received!\");\n      this.log(`App.Version.${response.major}.${response.minor}.${response.patch}`);\n      this.log(`Device Locked: ${response.device_locked}`);\n      this.log(`Test mode: ${response.test_mode}`);\n      this.log(\"Full response:\");\n      this.log(response);\n    },\n    async signExampleTx() {\n      this.deviceLog = [];\n\n      // Given a transport (U2F/HIF/WebUSB) it is possible instantiate the app\n      const transport = await this.getTransport();\n      const app = new CosmosApp(transport);\n\n      // now it is possible to access all commands in the app\n      const path = [44, 118, 0, 0, 0];\n      const message =\n        '{\"account_number\":\"6571\",\"chain_id\":\"cosmoshub-2\",\"fee\":{\"amount\":[{\"amount\":\"5000\",\"denom\":\"uatom\"}],\"gas\":\"200000\"},\"memo\":\"Delegated with Ledger from union.market\",\"msgs\":[{\"type\":\"cosmos-sdk/MsgDelegate\",\"value\":{\"amount\":{\"amount\":\"1000000\",\"denom\":\"uatom\"},\"delegator_address\":\"cosmos102hty0jv2s29lyc4u0tv97z9v298e24t3vwtpl\",\"validator_address\":\"cosmosvaloper1grgelyng2v6v3t8z87wu3sxgt9m5s03xfytvz7\"}}],\"sequence\":\"0\"}';\n      const response = await app.sign(path, message);\n\n      this.log(\"Response received!\");\n      this.log(`App.Version.${response.major}.${response.minor}.${response.patch}`);\n      this.log(`Device Locked: ${response.device_locked}`);\n      this.log(`Test mode: ${response.test_mode}`);\n      this.log(\"Full response:\");\n      this.log(response);\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nbutton {\n  padding: 5px;\n  font-weight: bold;\n  font-size: medium;\n}\n\nul {\n  padding: 10px;\n  text-align: left;\n  alignment: left;\n  list-style-type: none;\n  background: black;\n  font-weight: bold;\n  color: greenyellow;\n}\n</style>\n"],"sourceRoot":"vue_example/components"}]}