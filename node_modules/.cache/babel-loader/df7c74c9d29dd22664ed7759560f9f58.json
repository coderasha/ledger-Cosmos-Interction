{"remainingRequest":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/babel-loader/lib/index.js!/home/admin1/Desktop/ledger-cosmos-js (copy)/src/helperV1.js","dependencies":[{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/src/helperV1.js","mtime":1573038128251},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/.babelrc","mtime":1573041144236},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/admin1/Desktop/ledger-cosmos-js (copy)/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgQ0xBLCBlcnJvckNvZGVUb1N0cmluZywgSU5TLCBwcm9jZXNzRXJyb3JSZXNwb25zZSB9IGZyb20gIi4vY29tbW9uIjsKZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZVBhdGh2MShwYXRoKSB7CiAgaWYgKHBhdGggPT0gbnVsbCB8fCBwYXRoLmxlbmd0aCA8IDMpIHsKICAgIHRocm93IG5ldyBFcnJvcigiSW52YWxpZCBwYXRoLiIpOwogIH0KCiAgaWYgKHBhdGgubGVuZ3RoID4gMTApIHsKICAgIHRocm93IG5ldyBFcnJvcigiSW52YWxpZCBwYXRoLiBMZW5ndGggc2hvdWxkIGJlIDw9IDEwIik7CiAgfQoKICB2YXIgYnVmID0gQnVmZmVyLmFsbG9jKDEgKyA0ICogcGF0aC5sZW5ndGgpOwogIGJ1Zi53cml0ZVVJbnQ4KHBhdGgubGVuZ3RoLCAwKTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSArPSAxKSB7CiAgICB2YXIgdiA9IHBhdGhbaV07CgogICAgaWYgKGkgPCAzKSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1iaXR3aXNlCiAgICAgIHYgfD0gMHg4MDAwMDAwMDsgLy8gSGFyZGVuCiAgICB9CgogICAgYnVmLndyaXRlSW50MzJMRSh2LCAxICsgaSAqIDQpOwogIH0KCiAgcmV0dXJuIGJ1ZjsKfQpleHBvcnQgZnVuY3Rpb24gc2lnblNlbmRDaHVua3YxKF94LCBfeDIsIF94MywgX3g0KSB7CiAgcmV0dXJuIF9zaWduU2VuZENodW5rdi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfc2lnblNlbmRDaHVua3YoKSB7CiAgX3NpZ25TZW5kQ2h1bmt2ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIF9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGFwcCwgY2h1bmtJZHgsIGNodW5rTnVtLCBjaHVuaykgewogICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgYXBwLnRyYW5zcG9ydC5zZW5kKENMQSwgSU5TLlNJR05fU0VDUDI1NksxLCBjaHVua0lkeCwgY2h1bmtOdW0sIGNodW5rLCBbMHg5MDAwLCAweDY5ODQsIDB4NmE4MF0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgdmFyIGVycm9yQ29kZURhdGEgPSByZXNwb25zZS5zbGljZSgtMik7CiAgICAgICAgICAgICAgdmFyIHJldHVybkNvZGUgPSBlcnJvckNvZGVEYXRhWzBdICogMjU2ICsgZXJyb3JDb2RlRGF0YVsxXTsKICAgICAgICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gZXJyb3JDb2RlVG9TdHJpbmcocmV0dXJuQ29kZSk7CgogICAgICAgICAgICAgIGlmIChyZXR1cm5Db2RlID09PSAweDZhODAgfHwgcmV0dXJuQ29kZSA9PT0gMHg2OTg0KSB7CiAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSAiIi5jb25jYXQoZXJyb3JNZXNzYWdlLCAiIDogIikuY29uY2F0KHJlc3BvbnNlLnNsaWNlKDAsIHJlc3BvbnNlLmxlbmd0aCAtIDIpLnRvU3RyaW5nKCJhc2NpaSIpKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHZhciBzaWduYXR1cmUgPSBudWxsOwoKICAgICAgICAgICAgICBpZiAocmVzcG9uc2UubGVuZ3RoID4gMikgewogICAgICAgICAgICAgICAgc2lnbmF0dXJlID0gcmVzcG9uc2Uuc2xpY2UoMCwgcmVzcG9uc2UubGVuZ3RoIC0gMik7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmUsCiAgICAgICAgICAgICAgICByZXR1cm5fY29kZTogcmV0dXJuQ29kZSwKICAgICAgICAgICAgICAgIGVycm9yX21lc3NhZ2U6IGVycm9yTWVzc2FnZQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0sIHByb2Nlc3NFcnJvclJlc3BvbnNlKSk7CgogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX3NpZ25TZW5kQ2h1bmt2LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["/home/admin1/Desktop/ledger-cosmos-js (copy)/src/helperV1.js"],"names":["CLA","errorCodeToString","INS","processErrorResponse","serializePathv1","path","length","Error","buf","Buffer","alloc","writeUInt8","i","v","writeInt32LE","signSendChunkv1","app","chunkIdx","chunkNum","chunk","transport","send","SIGN_SECP256K1","then","response","errorCodeData","slice","returnCode","errorMessage","toString","signature","return_code","error_message"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,iBAAd,EAAiCC,GAAjC,EAAsCC,oBAAtC,QAAkE,UAAlE;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,MAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACC,MAAL,GAAc,CAAlC,EAAqC;AACnC,UAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;;AACD,MAAIF,IAAI,CAACC,MAAL,GAAc,EAAlB,EAAsB;AACpB,UAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,MAAMC,GAAG,GAAGC,MAAM,CAACC,KAAP,CAAa,IAAI,IAAIL,IAAI,CAACC,MAA1B,CAAZ;AACAE,EAAAA,GAAG,CAACG,UAAJ,CAAeN,IAAI,CAACC,MAApB,EAA4B,CAA5B;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACC,MAAzB,EAAiCM,CAAC,IAAI,CAAtC,EAAyC;AACvC,QAAIC,CAAC,GAAGR,IAAI,CAACO,CAAD,CAAZ;;AACA,QAAIA,CAAC,GAAG,CAAR,EAAW;AACT;AACAC,MAAAA,CAAC,IAAI,UAAL,CAFS,CAEQ;AAClB;;AACDL,IAAAA,GAAG,CAACM,YAAJ,CAAiBD,CAAjB,EAAoB,IAAID,CAAC,GAAG,CAA5B;AACD;;AACD,SAAOJ,GAAP;AACD;AAED,gBAAsBO,eAAtB;AAAA;AAAA;;;;;2BAAO,iBAA+BC,GAA/B,EAAoCC,QAApC,EAA8CC,QAA9C,EAAwDC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEH,GAAG,CAACI,SAAJ,CACJC,IADI,CACCrB,GADD,EACME,GAAG,CAACoB,cADV,EAC0BL,QAD1B,EACoCC,QADpC,EAC8CC,KAD9C,EACqD,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADrD,EAEJI,IAFI,CAEC,UAAAC,QAAQ,EAAI;AAChB,kBAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAe,CAAC,CAAhB,CAAtB;AACA,kBAAMC,UAAU,GAAGF,aAAa,CAAC,CAAD,CAAb,GAAmB,GAAnB,GAAyBA,aAAa,CAAC,CAAD,CAAzD;AACA,kBAAIG,YAAY,GAAG3B,iBAAiB,CAAC0B,UAAD,CAApC;;AAEA,kBAAIA,UAAU,KAAK,MAAf,IAAyBA,UAAU,KAAK,MAA5C,EAAoD;AAClDC,gBAAAA,YAAY,aAAMA,YAAN,gBAAwBJ,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBF,QAAQ,CAAClB,MAAT,GAAkB,CAApC,EAAuCuB,QAAvC,CAAgD,OAAhD,CAAxB,CAAZ;AACD;;AAED,kBAAIC,SAAS,GAAG,IAAhB;;AACA,kBAAIN,QAAQ,CAAClB,MAAT,GAAkB,CAAtB,EAAyB;AACvBwB,gBAAAA,SAAS,GAAGN,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBF,QAAQ,CAAClB,MAAT,GAAkB,CAApC,CAAZ;AACD;;AAED,qBAAO;AACLwB,gBAAAA,SAAS,EAATA,SADK;AAELC,gBAAAA,WAAW,EAAEJ,UAFR;AAGLK,gBAAAA,aAAa,EAAEJ;AAHV,eAAP;AAKD,aArBI,EAqBFzB,oBArBE,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { CLA, errorCodeToString, INS, processErrorResponse } from \"./common\";\n\nexport function serializePathv1(path) {\n  if (path == null || path.length < 3) {\n    throw new Error(\"Invalid path.\");\n  }\n  if (path.length > 10) {\n    throw new Error(\"Invalid path. Length should be <= 10\");\n  }\n  const buf = Buffer.alloc(1 + 4 * path.length);\n  buf.writeUInt8(path.length, 0);\n  for (let i = 0; i < path.length; i += 1) {\n    let v = path[i];\n    if (i < 3) {\n      // eslint-disable-next-line no-bitwise\n      v |= 0x80000000; // Harden\n    }\n    buf.writeInt32LE(v, 1 + i * 4);\n  }\n  return buf;\n}\n\nexport async function signSendChunkv1(app, chunkIdx, chunkNum, chunk) {\n  return app.transport\n    .send(CLA, INS.SIGN_SECP256K1, chunkIdx, chunkNum, chunk, [0x9000, 0x6984, 0x6a80])\n    .then(response => {\n      const errorCodeData = response.slice(-2);\n      const returnCode = errorCodeData[0] * 256 + errorCodeData[1];\n      let errorMessage = errorCodeToString(returnCode);\n\n      if (returnCode === 0x6a80 || returnCode === 0x6984) {\n        errorMessage = `${errorMessage} : ${response.slice(0, response.length - 2).toString(\"ascii\")}`;\n      }\n\n      let signature = null;\n      if (response.length > 2) {\n        signature = response.slice(0, response.length - 2);\n      }\n\n      return {\n        signature,\n        return_code: returnCode,\n        error_message: errorMessage,\n      };\n    }, processErrorResponse);\n}\n"]}]}